The following is a Prolog program that can be used to generate and test all legal evolutions of a game represented in the situation calculus:

% All legal evolutions of a game: can be used both as a generator and test.
game(F,F):- final(F).
game(S,F):- \+ final(S), legal(M,S), game(do(M,S),F).

The domain independent version of the situation calculus is as follows:

% Situation Calculus - our formulation for games.
holds(F, S):- initially(F, S).
holds(F, do(M, S)):- effect(F, M, S).
holds(F, do(A, S)):- holds(F, S), \+ abnormal(F, A, S).

{strategy_example}

Here's a description of a different strategy:

{strategy_description}

Produce Prolog representation of the new strategy for the above game. Name the predicate "select". Do not use constants for the names of the moves. Mark the beginning and end of the Prolog code with a '@'. Do not put any non-Prolog syntax between '@' characters.
