{
    "name": "Rehori",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "runtime_error",
    "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n\n/* Game specific predicates for Political Negotiation */\n\n% Payoff matrix for Political Negotiation\npayoff('Hold', 'Hold', -5, -5).\npayoff('Comp', 'Hold', -3, 3).\npayoff('Hold', 'Comp', 3, -3).\npayoff('Comp', 'Comp', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(p1), s0).\ninitially(player(p2), s0).\ninitially(role(p1,row), s0).\ninitially(role(p2,col), s0).\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'Comp'), s0).\n\n% Final state definition\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% Legal moves definition\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves\npossible(move(P,'Hold'), S):- holds(player(P), S).\npossible(move(P,'Comp'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('Hold', 'Comp').\nopposite_move('Comp', 'Hold').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n",
    "game_moves": [
        "Comp",
        "Hold"
    ],
    "game_players": [
        "p1",
        "p2"
    ],
    "default_move": "Comp",
    "moves": [
        "Comp"
    ],
    "payoffs": [],
    "total_payoff": 0,
    "trace_messages": [],
    "attempts": 1
}