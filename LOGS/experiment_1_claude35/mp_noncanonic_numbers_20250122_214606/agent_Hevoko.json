{
    "name": "Hevoko",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "runtime_error",
    "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n/* Game specific predicates for Gallery Game */\n\n% Payoff matrix\npayoff('P1', 'P1', 1, -1).\npayoff('P2', 'P2', 1, -1).\npayoff('P1', 'P2', -1, 1).\npayoff('P2', 'P1', -1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(small), s0).\ninitially(player(big), s0).\ninitially(role(small,row), s0).\ninitially(role(big,col), s0).\ninitially(control(small), s0).\ninitially(control(big), s0).\ninitially(default_move(_, 'P1'), s0).\n\n% What is possible for a player to choose\npossible(move(P,'P1'), S):- holds(player(P), S).\npossible(move(P,'P2'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('P1', 'P2').\nopposite_move('P2', 'P1').\n",
    "game_moves": [
        "P2",
        "P1"
    ],
    "game_players": [
        "small",
        "big"
    ],
    "default_move": "P1",
    "moves": [
        "P1"
    ],
    "payoffs": [],
    "total_payoff": 0,
    "trace_messages": [],
    "attempts": 1
}