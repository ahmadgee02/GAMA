{
    "name": "Moqira",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n/* Game specific predicates for Sports Sponsorship Game */\n\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n% Payoff matrix ('soccer' or 'basketball')\npayoff('soccer', 'soccer', 3, -3).\npayoff('basketball', 'basketball', 3, -3).\npayoff('soccer', 'basketball', -5, 5).\npayoff('basketball', 'soccer', -5, 5).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(small), s0).\ninitially(player(large), s0).\ninitially(role(small,row), s0).\ninitially(role(large,col), s0).\ninitially(control(small), s0).\ninitially(control(large), s0).\ninitially(default_move(_, 'soccer'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'soccer'), S):- holds(player(P), S).\npossible(move(P,'basketball'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('soccer', 'basketball').\nopposite_move('basketball', 'soccer').\n\n% The effects of a move\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
    "game_moves": [
        "basketball",
        "soccer"
    ],
    "game_players": [
        "small",
        "large"
    ],
    "default_move": "soccer",
    "moves": [
        "soccer",
        "soccer",
        "basketball",
        "basketball"
    ],
    "payoffs": [
        3.0,
        -5.0,
        3.0,
        -5.0
    ],
    "total_payoff": -4.0,
    "trace_messages": [],
    "attempts": 1
}