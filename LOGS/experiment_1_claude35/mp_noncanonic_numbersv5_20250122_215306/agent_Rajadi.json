{
    "name": "Rajadi",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n% Payoff matrix (gains/losses in percentage points)\npayoff('economic', 'economic', 5, -5).\npayoff('social', 'social', 5, -5).\npayoff('economic', 'social', -4, 4).\npayoff('social', 'economic', -4, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(candidate_a), s0).\ninitially(player(candidate_b), s0).\ninitially(role(candidate_a, row), s0).\ninitially(role(candidate_b, col), s0).\ninitially(control(candidate_a), s0).\ninitially(control(candidate_b), s0).\ninitially(default_move(_, 'economic'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% Legal moves\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves for players\npossible(move(P,'economic'), S):- holds(player(P), S).\npossible(move(P,'social'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('economic', 'social').\nopposite_move('social', 'economic').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\n\n% Abnormal conditions\nabnormal(control(P), move(P, _M), _S).\n\n% Final outcomes\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
    "game_moves": [
        "economic",
        "social"
    ],
    "game_players": [
        "candidate_a",
        "candidate_b"
    ],
    "default_move": "economic",
    "moves": [
        "economic",
        "economic",
        "social",
        "social"
    ],
    "payoffs": [
        5.0,
        -4.0,
        5.0,
        -4.0
    ],
    "total_payoff": 2.0,
    "trace_messages": [],
    "attempts": 1
}