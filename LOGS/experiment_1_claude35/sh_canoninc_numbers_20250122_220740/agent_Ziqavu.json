{
    "name": "Ziqavu",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous effect/3.\n:- discontiguous initially/2.\n:- discontiguous finally/2.\n\n/* Game specific predicates for Stag Hunt */\n\n% Payoff matrix for Stag Hunt\npayoff('Stag', 'Stag', 3, 3).\npayoff('Hare', 'Stag', 2, 0).\npayoff('Stag', 'Hare', 0, 2).\npayoff('Hare', 'Hare', 1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(p1), s0).\ninitially(player(p2), s0).\ninitially(role(p1,row), s0).\ninitially(role(p2,col), s0).\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'Stag'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% Legal moves\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves\npossible(move(P,'Stag'), S):- holds(player(P), S).\npossible(move(P,'Hare'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('Stag', 'Hare').\nopposite_move('Hare', 'Stag').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
    "game_moves": [
        "Hare",
        "Stag"
    ],
    "game_players": [
        "p1",
        "p2"
    ],
    "default_move": "Stag",
    "moves": [
        "Stag",
        "Stag",
        "Hare",
        "Hare"
    ],
    "payoffs": [
        3.0,
        0.0,
        1.0,
        2.0
    ],
    "total_payoff": 6.0,
    "trace_messages": [],
    "attempts": 1
}