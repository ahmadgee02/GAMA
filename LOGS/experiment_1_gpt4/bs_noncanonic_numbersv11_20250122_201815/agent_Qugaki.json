{
    "name": "Qugaki",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n/* Game specific predicates for Generals' Coordination Game */\n\n% Payoff matrix for Generals' Coordination Game\npayoff('North Ridge', 'North Ridge', 2, 1).\npayoff('South Valley', 'South Valley', 1, 2).\npayoff('North Ridge', 'South Valley', 0, 0).\npayoff('South Valley', 'North Ridge', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(general1), s0).\ninitially(player(general2), s0).\ninitially(role(general1,north_ridge), s0).\ninitially(role(general2,south_valley), s0).\ninitially(control(general1), s0).\ninitially(control(general2), s0).\ninitially(default_move(_, 'South Valley'), s0).\n\n% When a state is final: no need to check content as it's generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_G2, _M2), do(move(_G1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(G, M), S):- possible(move(G, M), S), holds(control(G), S).\n\n% What is possible for a player to choose\npossible(move(G, 'North Ridge'), S):- holds(player(G), S).\npossible(move(G, 'South Valley'), S):- holds(player(G), S).\n\n% Moves that are opposite to each other.\nopposite_move('North Ridge', 'South Valley').\nopposite_move('South Valley', 'North Ridge').\n\n% The effects of a move: if G has chosen M, then in the next state this\n% is what they did.\neffect(did(G, M), move(G, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(G), move(G, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(G1,M1,U1,G2,M2,U2), S):-\n    final(S),\n    holds(role(G1, north_ridge), S),\n    holds(did(G1, M1), S),\n    holds(role(G2, south_valley), S),\n    holds(did(G2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(G1, U1), S):-\n    finally(outcome(G1,_,U1,_,_,_), S).\nfinally(goal(G2, U2), S):-\n    finally(outcome(_,_,_,G2,_,U2), S).\n\n",
    "game_moves": [
        "South Valley",
        "North Ridge"
    ],
    "game_players": [
        "general1",
        "general2"
    ],
    "default_move": "South Valley",
    "moves": [
        "South Valley",
        "South Valley",
        "North Ridge",
        "North Ridge"
    ],
    "payoffs": [
        1.0,
        0.0,
        2.0,
        0.0
    ],
    "total_payoff": 3.0,
    "trace_messages": [],
    "attempts": 1
}