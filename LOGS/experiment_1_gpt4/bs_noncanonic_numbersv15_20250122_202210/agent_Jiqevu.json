{
    "name": "Jiqevu",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n:- discontiguous initial/1.\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the Tech vs. Marketing conference game\npayoff('Tech', 'Tech', 2, 1).\npayoff('Marketing', 'Marketing', 1, 2).\npayoff('Tech', 'Marketing', 0, 0).\npayoff('Marketing', 'Tech', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(c1), s0).\ninitially(player(c2), s0).\ninitially(role(c1, tech_enthusiast), s0).\ninitially(role(c2, marketing_specialist), s0).\ninitially(control(c1), s0).\ninitially(control(c2), s0).\ninitially(default_move(_, 'Tech'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'Tech'), S):- holds(player(P), S).\npossible(move(P, 'Marketing'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('Tech', 'Marketing').\nopposite_move('Marketing', 'Tech').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(C1, M1, U1, C2, M2, U2), S):-\n    final(S),\n    holds(role(C1, tech_enthusiast), S),\n    holds(did(C1, M1), S),\n    holds(role(C2, marketing_specialist), S),\n    holds(did(C2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(C1, U1), S):-\n    finally(outcome(C1, _, U1, _, _, _), S).\nfinally(goal(C2, U2), S):-\n    finally(outcome(_, _, _, C2, _, U2), S).\n\n",
    "game_moves": [
        "Tech",
        "Marketing"
    ],
    "game_players": [
        "c1",
        "c2"
    ],
    "default_move": "Tech",
    "moves": [
        "Tech",
        "Tech",
        "Marketing",
        "Marketing"
    ],
    "payoffs": [
        2.0,
        0.0,
        1.0,
        0.0
    ],
    "total_payoff": 3.0,
    "trace_messages": [],
    "attempts": 1
}