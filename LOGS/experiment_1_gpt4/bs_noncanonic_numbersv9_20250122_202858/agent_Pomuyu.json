{
    "name": "Pomuyu",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous initially/2.\n:- discontiguous payoff/4.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous final/1.\n:- discontiguous game/2.\n\n% Game-specific predicates for the Strategy Session Game\n\n% Payoff matrix for the Strategy Session Game\npayoff('Grand Conference Hall', 'Grand Conference Hall', 2, 1).\npayoff('Tech Innovation Center', 'Tech Innovation Center', 1, 2).\npayoff('Grand Conference Hall', 'Tech Innovation Center', 0, 0).\npayoff('Tech Innovation Center', 'Grand Conference Hall', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(m1), s0).\ninitially(player(m2), s0).\ninitially(role(m1, hall_supporter), s0).\ninitially(role(m2, tech_supporter), s0).\ninitially(control(m1), s0).\ninitially(control(m2), s0).\ninitially(default_move(_, 'Grand Conference Hall'), s0).\n\n% When a state is final: no need to check content as it will be generated by game/2, implying it is a legal state.\nfinal(do(move(_M2, _Loc2), do(move(_M1, _Loc1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (it is their turn).\nlegal(move(P, Loc), S):- possible(move(P, Loc), S), holds(control(P), S).\n\n% What is possible for a manager to choose\npossible(move(P,'Grand Conference Hall'), S):- holds(player(P), S).\npossible(move(P,'Tech Innovation Center'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other (in a non-union way, disagreement).\nopposite_move('Grand Conference Hall', 'Tech Innovation Center').\nopposite_move('Tech Innovation Center', 'Grand Conference Hall').\n\n% The effects of a move: if a manager has chosen a location, then in the next state this is what they did.\neffect(did(P, Loc), move(P, Loc), _S).\n\n% The effects of a move: once a move is made, the manager loses control, i.e., cannot move anymore.\nabnormal(control(P), move(P, _Loc), _S).\n\n% What holds finally: the outcome with managers, moves, and utilities.\nfinally(outcome(M1,Loc1,U1,M2,Loc2,U2), S):-\n    final(S),\n    holds(role(M1, hall_supporter), S),\n    holds(did(M1, Loc1), S),\n    holds(role(M2, tech_supporter), S),\n    holds(did(M2, Loc2), S),\n    payoff(Loc1, Loc2, U1, U2).\n\n% Goals achieved by the managers.\nfinally(goal(M1, U1), S):-\n    finally(outcome(M1,_,U1,_,_,_), S).\nfinally(goal(M2, U2), S):-\n    finally(outcome(_,_,_,M2,_,U2), S).\n",
    "game_moves": [
        "Tech Innovation Center",
        "Grand Conference Hall"
    ],
    "game_players": [
        "m1",
        "m2"
    ],
    "default_move": "Grand Conference Hall",
    "moves": [
        "Grand Conference Hall",
        "Grand Conference Hall",
        "Tech Innovation Center",
        "Tech Innovation Center"
    ],
    "payoffs": [
        2.0,
        0.0,
        1.0,
        0.0
    ],
    "total_payoff": 3.0,
    "trace_messages": [],
    "attempts": 1
}