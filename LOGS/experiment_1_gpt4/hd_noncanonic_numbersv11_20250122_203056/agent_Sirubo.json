{
    "name": "Sirubo",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous initially/2.\n:- discontiguous payoff/4.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for Water Sharing Game\npayoff('more', 'more', -10, -10).\npayoff('equitable', 'more', -2, 2).\npayoff('more', 'equitable', 2, -2).\npayoff('equitable', 'equitable', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(farmer1), s0).\ninitially(player(farmer2), s0).\ninitially(role(farmer1, horiz), s0).\ninitially(role(farmer2, vert), s0).\ninitially(control(farmer1), s0).\ninitially(control(farmer2), s0).\ninitially(default_move(_, 'equitable'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_Farmer2, _M2), do(move(_Farmer1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(Farmer, M), S):- possible(move(Farmer, M), S), holds(control(Farmer), S).\n\n% What is possible for a player to choose\npossible(move(Farmer, 'more'), S):- holds(player(Farmer), S).\npossible(move(Farmer, 'equitable'), S):- holds(player(Farmer), S).\n\n% Moves that are opposite to each other.\nopposite_move('equitable', 'more').\nopposite_move('more', 'equitable').\n\n% The effects of a move: if Farmer has chosen M, then in the next state this\n% is what they did.\neffect(did(Farmer, M), move(Farmer, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(Farmer), move(Farmer, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(Farmer1, M1, U1, Farmer2, M2, U2), S):-\n    final(S),\n    holds(role(Farmer1, horiz), S),\n    holds(did(Farmer1, M1), S),\n    holds(role(Farmer2, vert), S),\n    holds(did(Farmer2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(Farmer1, U1), S):-\n    finally(outcome(Farmer1, _, U1, _, _, _), S).\nfinally(goal(Farmer2, U2), S):-\n    finally(outcome(_, _, _, Farmer2, _, U2), S).\n",
    "game_moves": [
        "equitable",
        "more"
    ],
    "game_players": [
        "farmer1",
        "farmer2"
    ],
    "default_move": "equitable",
    "moves": [
        "equitable",
        "equitable",
        "more",
        "more"
    ],
    "payoffs": [
        0.0,
        -2.0,
        -10.0,
        2.0
    ],
    "total_payoff": -10.0,
    "trace_messages": [],
    "attempts": 1
}