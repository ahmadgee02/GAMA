{
    "name": "Vupaje",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n\n/* Game specific predicates for the CO2 Emission Negotiation Game */\n\n% Payoff matrix for CO2 Emission Negotiation Game\npayoff('High', 'High', -10, -10).\npayoff('Cut', 'High', -4, 4).\npayoff('High', 'Cut', 4, -4).\npayoff('Cut', 'Cut', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play\ninitially(player(country1), s0).\ninitially(player(country2), s0).\ninitially(role(country1, option1), s0).\ninitially(role(country2, option2), s0).\ninitially(control(country1), s0).\ninitially(control(country2), s0).\ninitially(default_move(_, 'High'), s0).\n\n% When a state is final: no need to check content as it's generated by game/2,\n% implying it is a legal state\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (it's their turn)\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'High'), S):- holds(player(P), S).\npossible(move(P, 'Cut'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('High', 'Cut').\nopposite_move('Cut', 'High').\n\n% The effects of a move: if P has chosen M, then in the next state this is what they did\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities\nfinally(outcome(Country1, M1, U1, Country2, M2, U2), S):-\n    final(S),\n    holds(role(Country1, option1), S),\n    holds(did(Country1, M1), S),\n    holds(role(Country2, option2), S),\n    holds(did(Country2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players\nfinally(goal(Country1, U1), S):-\n    finally(outcome(Country1,_,U1,_,_,_), S).\nfinally(goal(Country2, U2), S):-\n    finally(outcome(_,_,_,Country2,_,U2), S).\n\n",
    "game_moves": [
        "High",
        "Cut"
    ],
    "game_players": [
        "country1",
        "country2"
    ],
    "default_move": "High",
    "moves": [
        "High",
        "High",
        "Cut",
        "Cut"
    ],
    "payoffs": [
        -10.0,
        4.0,
        0.0,
        -4.0
    ],
    "total_payoff": -10.0,
    "trace_messages": [],
    "attempts": 1
}