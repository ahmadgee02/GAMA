{
    "name": "Xivegu",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous payoff/4.\n:- discontiguous final/1.\n:- discontiguous finally/2.\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(c1), s0).\ninitially(player(c2), s0).\ninitially(role(c1, company1), s0).\ninitially(role(c2, company2), s0).\ninitially(control(c1), s0).\ninitially(control(c2), s0).\ninitially(default_move(_, 'moderate'), s0).\n\n% Payoff matrix for the new game\npayoff('aggressive', 'aggressive', -20, -20).\npayoff('moderate', 'aggressive', -4, 4).\npayoff('aggressive', 'moderate', 4, -4).\npayoff('moderate', 'moderate', 0, 0).\n\n% A final state is achieved after each player has made a move.\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))) :- initial(S).\n\n% A legal move is possible for a player if they have control (it's their turn).\nlegal(move(C, M), S) :- possible(move(C, M), S), holds(control(C), S).\n\n% What is possible for each player to choose\npossible(move(C, 'aggressive'), S) :- holds(player(C), S).\npossible(move(C, 'moderate'), S) :- holds(player(C), S).\n\n% Moves that are opposite to each other.\nopposite_move('moderate', 'aggressive').\nopposite_move('aggressive', 'moderate').\n\n% The effects of a move: once a move is chosen, it is recorded for the next state.\neffect(did(C, M), move(C, M), _S).\n\n% The player loses control once they make a move and can't move again.\nabnormal(control(C), move(C, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(C1, M1, U1, C2, M2, U2), S) :-\n    final(S),\n    holds(role(C1, company1), S),\n    holds(did(C1, M1), S),\n    holds(role(C2, company2), S),\n    holds(did(C2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(C1, U1), S) :-\n    finally(outcome(C1, _, U1, _, _, _), S).\nfinally(goal(C2, U2), S) :-\n    finally(outcome(_, _, _, C2, _, U2), S).\n",
    "game_moves": [
        "moderate",
        "aggressive"
    ],
    "game_players": [
        "c1",
        "c2"
    ],
    "default_move": "moderate",
    "moves": [
        "moderate",
        "moderate",
        "aggressive",
        "aggressive"
    ],
    "payoffs": [
        0.0,
        -4.0,
        -20.0,
        4.0
    ],
    "total_payoff": -20.0,
    "trace_messages": [],
    "attempts": 1
}