{
    "name": "Zegeci",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n:- discontiguous payoff/6.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the election campaign game\npayoff('economic', 'economic', 5, -5).\npayoff('social', 'social', 5, -5).\npayoff('economic', 'social', -4, 4).\npayoff('social', 'economic', -4, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(candidateA), s0).\ninitially(player(candidateB), s0).\ninitially(role(candidateA, underdog), s0).\ninitially(role(candidateB, frontrunner), s0).\ninitially(control(candidateA), s0).\ninitially(control(candidateB), s0).\ninitially(default_move(_, 'economic'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_C2, _Focus2), do(move(_C1, _Focus1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(C, Focus), S) :- possible(move(C, Focus), S), holds(control(C), S).\n\n% What is possible for a player to choose\npossible(move(C, 'economic'), S) :- holds(player(C), S).\npossible(move(C, 'social'), S) :- holds(player(C), S).\n\n% Moves that are opposite to each other.\nopposite_move('economic', 'social').\nopposite_move('social', 'economic').\n\n% The effects of a move: if C has chosen Focus, then in the next state this\n% is what they did.\neffect(did(C, Focus), move(C, Focus), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(C), move(C, _Focus), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(C1,Focus1,U1,C2,Focus2,U2), S) :-\n    final(S),\n    holds(role(C1, underdog), S),\n    holds(did(C1, Focus1), S),\n    holds(role(C2, frontrunner), S),\n    holds(did(C2, Focus2), S),\n    payoff(Focus1, Focus2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(C1, U1), S) :-\n    finally(outcome(C1, _, U1, _, _, _), S).\nfinally(goal(C2, U2), S) :-\n    finally(outcome(_, _, _, C2, _, U2), S).\n",
    "game_moves": [
        "economic",
        "social"
    ],
    "game_players": [
        "candidateA",
        "candidateB"
    ],
    "default_move": "economic",
    "moves": [
        "economic",
        "economic",
        "social",
        "social"
    ],
    "payoffs": [
        5.0,
        -4.0,
        5.0,
        -4.0
    ],
    "total_payoff": 2.0,
    "trace_messages": [],
    "attempts": 1
}