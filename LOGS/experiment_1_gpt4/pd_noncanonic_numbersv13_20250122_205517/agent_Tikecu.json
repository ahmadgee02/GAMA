{
    "name": "Tikecu",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n/* Domain-specific predicates for Pollution Control Game */\n\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for Pollution Control Game\npayoff('C', 'C', 7, 7).\npayoff('C', 'D', 3, 10).\npayoff('D', 'C', 10, 3).\npayoff('D', 'D', 5, 5).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(country1), s0).\ninitially(player(country2), s0).\ninitially(role(country1, row), s0).\ninitially(role(country2, col), s0).\ninitially(control(country1), s0).\ninitially(control(country2), s0).\ninitially(default_move(_, 'D'), s0).\n\n% When a state is final: it has been generated by game/2, implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'C'), S):- holds(player(P), S).\npossible(move(P,'D'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('C', 'D').\nopposite_move('D', 'C').\n\n% The effects of a move: if P has chosen M, then in the next state this is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
    "game_moves": [
        "D",
        "C"
    ],
    "game_players": [
        "country1",
        "country2"
    ],
    "default_move": "D",
    "moves": [
        "D",
        "D",
        "C",
        "C"
    ],
    "payoffs": [
        5.0,
        10.0,
        7.0,
        3.0
    ],
    "total_payoff": 25.0,
    "trace_messages": [],
    "attempts": 1
}