{
    "name": "Bojiro",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the athletes' dilemma\npayoff('Drugs', 'Drugs', 3, 3).\npayoff('Clean', 'Drugs', 1, 9).\npayoff('Drugs', 'Clean', 9, 1).\npayoff('Clean', 'Clean', 6, 6).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(a1), s0).\ninitially(player(a2), s0).\ninitially(role(a1,row), s0).\ninitially(role(a2,col), s0).\ninitially(control(a1), s0).\ninitially(control(a2), s0).\ninitially(default_move(_, 'Clean'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_A2, _M2), do(move(_A1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'Drugs'), S):- holds(player(P), S).\npossible(move(P,'Clean'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('Clean', 'Drugs').\nopposite_move('Drugs', 'Clean').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(A1,M1,U1,A2,M2,U2), S):-\n    final(S),\n    holds(role(A1, row), S),\n    holds(did(A1, M1), S),\n    holds(role(A2, col), S),\n    holds(did(A2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(A1, U1), S):-\n    finally(outcome(A1,_,U1,_,_,_), S).\nfinally(goal(A2, U2), S):-\n    finally(outcome(_,_,_,A2,_,U2), S).\n",
    "game_moves": [
        "Clean",
        "Drugs"
    ],
    "game_players": [
        "a1",
        "a2"
    ],
    "default_move": "Clean",
    "moves": [
        "Clean",
        "Clean",
        "Drugs",
        "Drugs"
    ],
    "payoffs": [
        6.0,
        1.0,
        3.0,
        9.0
    ],
    "total_payoff": 19.0,
    "trace_messages": [],
    "attempts": 1
}