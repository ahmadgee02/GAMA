{
    "name": "Fotejo",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "runtime_error",
    "game_rules": "\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n:- discontiguous payoff/4.\n:- discontiguous opposite_move/2.\n\n/* Game specific predicates for the AI product development game */\n\n/* Payoff matrix for the AI product development game */\npayoff('Invest', 'Invest', 4, 4).\npayoff('Collaborate', 'Invest', 1, 7).\npayoff('Invest', 'Collaborate', 7, 1).\npayoff('Collaborate', 'Collaborate', 6, 6).\n\n/* Initial state */\ninitial(s0).\n\n/* What holds initially: who is a player, their role, and whether they can play */\ninitially(player(alphaTech), s0).\ninitially(player(betaCorp), s0).\ninitially(role(alphaTech,company1), s0).\ninitially(role(betaCorp,company2), s0).\ninitially(control(alphaTech), s0).\ninitially(control(betaCorp), s0).\ninitially(default_move(_, 'Collaborate'), s0).\n\n/* When a state is final: no need to check content as it generated by game/2,\nimplying it is a legal state. */\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n/* A legal move is a possible move where the player has control (is its turn). */\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n/* What is possible for a player to choose */\npossible(move(P,'Invest'), S):- holds(player(P), S).\npossible(move(P,'Collaborate'), S):- holds(player(P), S).\n\n/* Moves that are opposite to each other. */\nopposite_move('Invest', 'Collaborate').\nopposite_move('Collaborate', 'Invest').\n\n",
    "game_moves": [
        "Invest",
        "Collaborate"
    ],
    "game_players": [
        "alphaTech",
        "betaCorp"
    ],
    "default_move": "Collaborate",
    "moves": [
        "Collaborate"
    ],
    "payoffs": [],
    "total_payoff": 0,
    "trace_messages": [],
    "attempts": 1
}