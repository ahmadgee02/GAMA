{
    "name": "Xisema",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n:- discontiguous payoff/4.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the tech companies' collaboration game\npayoff('Commit', 'Commit', 10, 10).\npayoff('Commit', 'PullBack', 0, 5).\npayoff('PullBack', 'Commit', 5, 0).\npayoff('PullBack', 'PullBack', 4, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(tc1), s0).\ninitially(player(tc2), s0).\ninitially(role(tc1, row), s0).\ninitially(role(tc2, col), s0).\ninitially(control(tc1), s0).\ninitially(control(tc2), s0).\ninitially(default_move(_, 'PullBack'), s0).\n\n% When a state is final\nfinal(do(move(_TC2, _M2), do(move(_TC1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(T, M), S) :- possible(move(T, M), S), holds(control(T), S).\n\n% What is possible for a player to choose\npossible(move(T, 'Commit'), S) :- holds(player(T), S).\npossible(move(T, 'PullBack'), S) :- holds(player(T), S).\n\n% Moves that are opposite to each other\nopposite_move('Commit', 'PullBack').\nopposite_move('PullBack', 'Commit').\n\n% The effects of a move: if T has chosen M, then in the next state this is what they did.\neffect(did(T, M), move(T, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e., cannot move anymore.\nabnormal(control(T), move(T, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(TC1, M1, U1, TC2, M2, U2), S) :-\n    final(S),\n    holds(role(TC1, row), S),\n    holds(did(TC1, M1), S),\n    holds(role(TC2, col), S),\n    holds(did(TC2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(TC1, U1), S) :-\n    finally(outcome(TC1, _, U1, _, _, _), S).\nfinally(goal(TC2, U2), S) :-\n    finally(outcome(_, _, _, TC2, _, U2), S).\n",
    "game_moves": [
        "PullBack",
        "Commit"
    ],
    "game_players": [
        "tc1",
        "tc2"
    ],
    "default_move": "PullBack",
    "moves": [
        "PullBack",
        "PullBack",
        "Commit",
        "Commit"
    ],
    "payoffs": [
        4.0,
        5.0,
        10.0,
        0.0
    ],
    "total_payoff": 19.0,
    "trace_messages": [],
    "attempts": 1
}