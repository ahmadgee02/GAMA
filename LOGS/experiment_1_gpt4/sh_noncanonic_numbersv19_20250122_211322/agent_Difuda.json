{
    "name": "Difuda",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": "  \n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Game specific predicates for Film Directors Game (FDG)\n\n% Payoff matrix for FDG\npayoff('Full_Commit', 'Full_Commit', 7, 7).\npayoff('Full_Commit', 'Disengage', 0, 3).\npayoff('Disengage', 'Full_Commit', 3, 0).\npayoff('Disengage', 'Disengage', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(director1), s0).\ninitially(player(director2), s0).\ninitially(role(director1, role1), s0).\ninitially(role(director2, role2), s0).\ninitially(control(director1), s0).\ninitially(control(director2), s0).\ninitially(default_move(_, 'Disengage'), s0).\n\n% When a state is final.\nfinal(do(move(_D2, _M2), do(move(_D1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(D, M), S) :- possible(move(D, M), S), holds(control(D), S).\n\n% What is possible for a director to choose\npossible(move(D, 'Full_Commit'), S) :- holds(player(D), S).\npossible(move(D, 'Disengage'), S) :- holds(player(D), S).\n\n% Moves that are opposite to each other.\nopposite_move('Full_Commit', 'Disengage').\nopposite_move('Disengage', 'Full_Commit').\n\n% The effects of a move: if D has chosen M, then in the next state this\n% is what they did.\neffect(did(D, M), move(D, M), _S).\n\n% The effects of a move: once a move is made, the director loses control, i.e.\n% cannot move anymore.\nabnormal(control(D), move(D, _M), _S).\n\n% What holds finally: the outcome with directors, Moves, and Utilities.\nfinally(outcome(D1, M1, U1, D2, M2, U2), S) :-\n    final(S),\n    holds(role(D1, role1), S),\n    holds(did(D1, M1), S),\n    holds(role(D2, role2), S),\n    holds(did(D2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the directors.\nfinally(goal(D1, U1), S) :-\n    finally(outcome(D1, _, U1, _, _, _), S).\nfinally(goal(D2, U2), S) :-\n    finally(outcome(_, _, _, D2, _, U2), S).\n",
    "game_moves": [
        "Disengage",
        "Full_Commit"
    ],
    "game_players": [
        "director1",
        "director2"
    ],
    "default_move": "Disengage",
    "moves": [
        "Disengage",
        "Disengage",
        "Full_Commit",
        "Full_Commit"
    ],
    "payoffs": [
        2.0,
        3.0,
        7.0,
        0.0
    ],
    "total_payoff": 12.0,
    "trace_messages": [],
    "attempts": 1
}