{
    "name": "Yagoya",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "runtime_error",
    "game_rules": " \n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Game specific predicates for the Co-Directors game\n\n% Payoff matrix for Co-Directors game\npayoff('FocusFilms', 'FocusFilms', 2, 2).\npayoff('CommitProject', 'Disengage', 0, 3).\npayoff('Disengage', 'CommitProject', 3, 0).\npayoff('CommitProject', 'CommitProject', 7, 7).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(d1), s0).\ninitially(player(d2), s0).\ninitially(role(d1, director1), s0).\ninitially(role(d2, director2), s0).\ninitially(control(d1), s0).\ninitially(control(d2), s0).\ninitially(default_move(_, 'FocusFilms'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_D2, _M2), do(move(_D1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(D, M), S):- possible(move(D, M), S), holds(control(D), S).\n\n% What is possible for a player to choose\npossible(move(D,'FocusFilms'), S):- holds(player(D), S).\npossible(move(D,'CommitProject'), S):- holds(player(D), S).\npossible(move(D,'Disengage'), S):- holds(player(D), S).\n\n% Moves that are opposite to each other.\nopposite_move('FocusFilms', 'CommitProject').\nopposite_move('CommitProject', 'FocusFilms').\nopposite_move('Disengage', 'CommitProject').\nopposite_move('CommitProject', 'Disengage').\n\n% The effects of a move: if D has chosen M, then in the next state this\n% is what they did.\neffect(did(D, M), move(D, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(D), move(D, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(D1,M1,U1,D2,M2,U2), S):-\n    final(S),\n    holds(role(D1, director1), S),\n    holds(did(D1, M1), S),\n    holds(role(D2, director2), S),\n    holds(did(D2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(D1, U1), S):-\n    finally(outcome(D1,_,U1,_,_,_), S).\nfinally(goal(D2, U2), S):-\n    finally(outcome(_,_,_,D2,_,U2), S).\n",
    "game_moves": [
        "FocusFilms",
        "CommitProject",
        "Disengage"
    ],
    "game_players": [
        "d1",
        "d2"
    ],
    "default_move": "FocusFilms",
    "moves": [
        "FocusFilms",
        "FocusFilms"
    ],
    "payoffs": [
        2.0
    ],
    "total_payoff": 2.0,
    "trace_messages": [],
    "attempts": 1
}