{
    "name": "Lawado",
    "strategy_name": "tit-for-tat.",
    "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
    "status": "correct",
    "game_rules": " \n:- discontiguous possibly/3.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n\n% Game specific predicates for the mutual defense pact game\n\n% Payoff matrix for the mutual defense pact game\npayoff('sign', 'sign', 4, 4).\npayoff('sign', 'not_sign', 0, 2).\npayoff('not_sign', 'sign', 2, 0).\npayoff('not_sign', 'not_sign', 1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play\ninitially(player(nation1), s0).\ninitially(player(nation2), s0).\ninitially(role(nation1,row), s0).\ninitially(role(nation2,col), s0).\ninitially(control(nation1), s0).\ninitially(control(nation2), s0).\ninitially(default_move(_, 'sign'), s0).\n\n% When a state is final: no need to check content as it's generated by game/2\nfinal(do(move(_Nation2, _M2), do(move(_Nation1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn)\nlegal(move(Nation, M), S) :- possible(move(Nation, M), S), holds(control(Nation), S).\n\n% What is possible for a player to choose\npossible(move(Nation,'sign'), S) :- holds(player(Nation), S).\npossible(move(Nation,'not_sign'), S) :- holds(player(Nation), S).\n\n% Moves that are opposite to each other\nopposite_move('sign', 'not_sign').\nopposite_move('not_sign', 'sign').\n\n% The effects of a move: if a nation has chosen M, then in the next state this is what they did\neffect(did(Nation, M), move(Nation, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e., cannot move anymore\nabnormal(control(Nation), move(Nation, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities\nfinally(outcome(N1, M1, U1, N2, M2, U2), S) :-\n    final(S),\n    holds(role(N1, row), S),\n    holds(did(N1, M1), S),\n    holds(role(N2, col), S),\n    holds(did(N2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players\nfinally(goal(N1, U1), S) :-\n    finally(outcome(N1, _, U1, _, _, _), S).\nfinally(goal(N2, U2), S) :-\n    finally(outcome(_, _, _, N2, _, U2), S).\n",
    "game_moves": [
        "not_sign",
        "sign"
    ],
    "game_players": [
        "nation1",
        "nation2"
    ],
    "default_move": "sign",
    "moves": [
        "sign",
        "sign",
        "not_sign",
        "not_sign"
    ],
    "payoffs": [
        4.0,
        0.0,
        1.0,
        2.0
    ],
    "total_payoff": 7.0,
    "trace_messages": [],
    "attempts": 1
}