{
  "name": "Nojogi",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n/* Game specific predicates for Battle of the Generals */\n\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n% Payoff matrix - north advocate is row player, east advocate is column player\npayoff('N', 'N', 4, 2).\npayoff('N', 'E', 0, 0).\npayoff('E', 'N', 0, 0).\npayoff('E', 'E', 2, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(p1), s0).\ninitially(player(p2), s0).\ninitially(role(p1,row), s0).    % p1 is north advocate\ninitially(role(p2,col), s0).    % p2 is east advocate\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'N'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'N'), S):- holds(player(P), S).\npossible(move(P,'E'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('N', 'E').\nopposite_move('E', 'N').\n\n% The effects of a move\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "E",
    "N"
  ],
  "game_players": [
    "p1",
    "p2"
  ],
  "default_move": "N",
  "moves": [
    "N",
    "N",
    "E",
    "E"
  ],
  "payoffs": [
    4.0,
    0.0,
    2.0,
    0.0
  ],
  "total_payoff": 6.0,
  "trace_messages": [],
  "attempts": 1
}