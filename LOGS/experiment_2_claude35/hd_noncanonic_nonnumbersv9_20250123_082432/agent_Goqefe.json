{
  "name": "Goqefe",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous initially/2.\n\n/* Game specific predicates for Military Strategy Game */\n\n% Payoff matrix: compromise='T' (truce), hold firm='F'\npayoff('T', 'T', 3, 3).    % Both seek truce\npayoff('T', 'F', 1, 4).    % P1 seeks truce, P2 holds firm\npayoff('F', 'T', 4, 1).    % P1 holds firm, P2 seeks truce\npayoff('F', 'F', 2, 2).    % Both hold firm (prolonged conflict)\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(p1), s0).\ninitially(player(p2), s0).\ninitially(role(p1,row), s0).\ninitially(role(p2,col), s0).\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'T'), s0).\n\n% Final state definition\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% Legal moves definition\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves\npossible(move(P,'T'), S):- holds(player(P), S).\npossible(move(P,'F'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('T', 'F').\nopposite_move('F', 'T').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\n\n% Abnormal predicate for control\nabnormal(control(P), move(P, _M), _S).\n\n% Final outcome definitions\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "T",
    "F"
  ],
  "game_players": [
    "p1",
    "p2"
  ],
  "default_move": "T",
  "moves": [
    "T",
    "T",
    "F",
    "F"
  ],
  "payoffs": [
    3.0,
    1.0,
    2.0,
    4.0
  ],
  "total_payoff": 10.0,
  "trace_messages": [],
  "attempts": 1
}