{
  "name": "Ditaho",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n/* Game specific predicates for Gallery Game */\n:- discontiguous effect/3.\n\n% Payoff matrix: (small gallery owner, big gallery owner)\npayoff('A', 'A', 3, 1).\npayoff('B', 'B', 3, 1).\npayoff('A', 'B', 1, 3).\npayoff('B', 'A', 1, 3).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(small), s0).\ninitially(player(big), s0).\ninitially(role(small,row), s0).\ninitially(role(big,col), s0).\ninitially(control(small), s0).\ninitially(control(big), s0).\ninitially(default_move(_, 'A'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'A'), S):- holds(player(P), S).\npossible(move(P,'B'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('A', 'B').\nopposite_move('B', 'A').\n\n% The effects of a move: if P has chosen M\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: player loses control after moving\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "B",
    "A"
  ],
  "game_players": [
    "small",
    "big"
  ],
  "default_move": "A",
  "moves": [
    "A",
    "A",
    "B",
    "B"
  ],
  "payoffs": [
    3.0,
    1.0,
    3.0,
    1.0
  ],
  "total_payoff": 8.0,
  "trace_messages": [],
  "attempts": 1
}