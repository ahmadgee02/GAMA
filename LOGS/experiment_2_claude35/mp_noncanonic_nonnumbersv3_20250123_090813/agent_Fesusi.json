{
  "name": "Fesusi",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "runtime_error",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n% Payoff matrix (first player is unknown politician, second is influential)\npayoff('support', 'support', 3, -2).    % Match: unknown gains, influential loses\npayoff('oppose', 'oppose', 3, -2).      % Match: unknown gains, influential loses\npayoff('support', 'oppose', -1, 2).     % Differ: influential gains\npayoff('oppose', 'support', -1, 2).     % Differ: influential gains\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(unknown), s0).\ninitially(player(influential), s0).\ninitially(role(unknown, row), s0).\ninitially(role(influential, col), s0).\ninitially(control(unknown), s0).\ninitially(control(influential), s0).\ninitially(default_move(_, 'support'), s0).\n\n% What is possible for a player to choose\npossible(move(P,'support'), S):- holds(player(P), S).\npossible(move(P,'oppose'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('support', 'oppose').\nopposite_move('oppose', 'support').\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):- initial(S).\n\n% A legal move\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n",
  "game_moves": [
    "support",
    "oppose"
  ],
  "game_players": [
    "unknown",
    "influential"
  ],
  "default_move": "support",
  "moves": [
    "support"
  ],
  "payoffs": [],
  "total_payoff": 0,
  "trace_messages": [],
  "attempts": 1
}