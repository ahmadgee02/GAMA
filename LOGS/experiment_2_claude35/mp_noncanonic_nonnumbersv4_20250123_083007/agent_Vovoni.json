{
  "name": "Vovoni",
  "strategy_name": "anti-tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, M):-\n    holds(last_move(O, Mo), S),\n    opposite_move(Mo, M).",
  "status": "runtime_error",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n/* Game specific predicates for Warlords Strategic Game */\n\n% Payoff matrix (stronger warlord is p1, weaker is p2)\npayoff('ATTACK', 'ATTACK', 2, 3).    % Both attack, weaker gains advantage\npayoff('DEFEND', 'DEFEND', 1, 2).    % Both defend, weaker gains advantage\npayoff('ATTACK', 'DEFEND', 4, 1).    % Different strategies, stronger wins\npayoff('DEFEND', 'ATTACK', 4, 1).    % Different strategies, stronger wins\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(p1), s0).           % stronger warlord\ninitially(player(p2), s0).           % weaker warlord\ninitially(role(p1,row), s0).\ninitially(role(p2,col), s0).\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'DEFEND'), s0).\n\n% What moves are possible\npossible(move(P,'ATTACK'), S):- holds(player(P), S).\npossible(move(P,'DEFEND'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('ATTACK', 'DEFEND').\nopposite_move('DEFEND', 'ATTACK').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n",
  "game_moves": [
    "ATTACK",
    "DEFEND"
  ],
  "game_players": [
    "p1",
    "p2"
  ],
  "default_move": "DEFEND",
  "moves": [
    "DEFEND"
  ],
  "payoffs": [],
  "total_payoff": 0,
  "trace_messages": [],
  "attempts": 0
}