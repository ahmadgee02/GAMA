{
  "name": "Yejofe",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "runtime_error",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n\n% Payoff matrix (share='S', withhold='W')\npayoff('S', 'S', 4, 4).  % Both share: great results\npayoff('S', 'W', 1, 5).  % First shares, second withholds\npayoff('W', 'S', 5, 1).  % First withholds, second shares\npayoff('W', 'W', 2, 2).  % Both withhold: mediocre results\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(emp1), s0).\ninitially(player(emp2), s0).\ninitially(role(emp1,row), s0).\ninitially(role(emp2,col), s0).\ninitially(control(emp1), s0).\ninitially(control(emp2), s0).\ninitially(default_move(_, 'S'), s0).\n\n% What is possible for a player to choose\npossible(move(P,'S'), S):- holds(player(P), S).\npossible(move(P,'W'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('S', 'W').\nopposite_move('W', 'S').\n\n% Final state condition\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):- initial(S).\n\n% Legal moves\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Effects and abnormality\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n",
  "game_moves": [
    "W",
    "S"
  ],
  "game_players": [
    "emp1",
    "emp2"
  ],
  "default_move": "S",
  "moves": [
    "S"
  ],
  "payoffs": [],
  "total_payoff": 0,
  "trace_messages": [],
  "attempts": 1
}