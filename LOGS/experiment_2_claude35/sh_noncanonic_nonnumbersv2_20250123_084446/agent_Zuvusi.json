{
  "name": "Zuvusi",
  "strategy_name": "anti-tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, M):-\n    holds(last_move(O, Mo), S),\n    opposite_move(Mo, M).",
  "status": "correct",
  "game_rules": "\n/* Game specific predicates for Project Managers Game */\n\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n\n% Payoff matrix (collaborate vs work independently)\npayoff('COLLAB', 'COLLAB', 5, 5).\npayoff('COLLAB', 'INDEP', 0, 3).\npayoff('INDEP', 'COLLAB', 3, 0).\npayoff('INDEP', 'INDEP', 1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially\ninitially(player(pm1), s0).\ninitially(player(pm2), s0).\ninitially(role(pm1,row), s0).\ninitially(role(pm2,col), s0).\ninitially(control(pm1), s0).\ninitially(control(pm2), s0).\ninitially(default_move(_, 'COLLAB'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% Legal moves\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves\npossible(move(P,'COLLAB'), S):- holds(player(P), S).\npossible(move(P,'INDEP'), S):- holds(player(P), S).\n\n% Opposite moves\nopposite_move('COLLAB', 'INDEP').\nopposite_move('INDEP', 'COLLAB').\n\n% Effects of moves\neffect(did(P, M), move(P, M), _S).\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "INDEP",
    "COLLAB"
  ],
  "game_players": [
    "pm1",
    "pm2"
  ],
  "default_move": "COLLAB",
  "moves": [
    "COLLAB",
    "INDEP",
    "INDEP",
    "COLLAB"
  ],
  "payoffs": [
    5.0,
    3.0,
    1.0,
    0.0
  ],
  "total_payoff": 9.0,
  "trace_messages": [],
  "attempts": 0
}