{
  "name": "Jatobe",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": " \n:- discontiguous initial/1, initially/2, final/1, legal/2, possible/2, opposite_move/2, effect/3, abnormal/3, finally/2.\n\n% Payoff matrix for the Shopping Game\npayoff('Elegance', 'Elegance', 5, 2).\npayoff('Chic', 'Chic', 2, 5).\npayoff('Elegance', 'Chic', 0, 0).\npayoff('Chic', 'Elegance', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: players, their roles, and ability to choose.\ninitially(player(f1), s0).\ninitially(player(f2), s0).\ninitially(role(f1, elegance_lover), s0).\ninitially(role(f2, chic_lover), s0).\ninitially(control(f1), s0).\ninitially(control(f2), s0).\ninitially(default_move(_, 'Elegance'), s0).\n\n% When a state is final (as generated by game/2).\nfinal(do(move(_F2, _M2), do(move(_F1, _M1), S))) :- initial(S).\n\n% Legal move - a possible move where the player has control.\nlegal(move(F, M), S) :- possible(move(F, M), S), holds(control(F), S).\n\n% What move is possible\npossible(move(F, 'Elegance'), S) :- holds(player(F), S).\npossible(move(F, 'Chic'), S) :- holds(player(F), S).\n\n% Opposite moves\nopposite_move('Elegance', 'Chic').\nopposite_move('Chic', 'Elegance').\n\n% The effects of a move: if F has chosen M, next state this is recorded.\neffect(did(F, M), move(F, M), _S).\n\n% Effects of move: once a move is made, the player cannot move anymore.\nabnormal(control(F), move(F, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(F1, M1, U1, F2, M2, U2), S) :-\n    final(S),\n    holds(role(F1, elegance_lover), S),\n    holds(did(F1, M1), S),\n    holds(role(F2, chic_lover), S),\n    holds(did(F2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(F1, U1), S) :-\n    finally(outcome(F1, _, U1, _, _, _), S).\nfinally(goal(F2, U2), S) :-\n    finally(outcome(_, _, _, F2, _, U2), S).\n",
  "game_moves": [
    "Chic",
    "Elegance"
  ],
  "game_players": [
    "f1",
    "f2"
  ],
  "default_move": "Elegance",
  "moves": [
    "Elegance",
    "Elegance",
    "Chic",
    "Chic"
  ],
  "payoffs": [
    5.0,
    0.0,
    2.0,
    0.0
  ],
  "total_payoff": 7.0,
  "trace_messages": [],
  "attempts": 1
}