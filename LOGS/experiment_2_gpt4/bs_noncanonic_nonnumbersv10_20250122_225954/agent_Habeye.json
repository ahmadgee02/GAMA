{
  "name": "Habeye",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for Roommate Dining Game\npayoff('Italian', 'Italian', 4, 2). % Italian lover gets 4, Japanese lover gets 2\npayoff('Japanese', 'Japanese', 2, 4). % Japanese lover gets 4, Italian lover gets 2\npayoff('Italian', 'Japanese', 0, 0).\npayoff('Japanese', 'Italian', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% Initial facts about the game\ninitially(player(p1), s0).         % Player 1 (Italian lover)\ninitially(player(p2), s0).         % Player 2 (Japanese lover)\ninitially(role(p1, italian), s0).  % Role of Player 1\ninitially(role(p2, japanese), s0). % Role of Player 2\ninitially(control(p1), s0).        % Player 1 has control\ninitially(control(p2), s0).        % Player 2 has control\ninitially(default_move(_, 'Italian'), s0). % Default move preference\n\n% Final state predicate when both players have moved\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))) :- initial(S).\n\n% Legal moves where a player has control\nlegal(move(P, M), S) :- possible(move(P, M), S), holds(control(P), S).\n\n% Possible moves for the players\npossible(move(P, 'Italian'), S) :- holds(player(P), S).\npossible(move(P, 'Japanese'), S) :- holds(player(P), S).\n\n% Opposite moves are not applicable as both moves are exclusive\nopposite_move('Italian', 'Japanese').\nopposite_move('Japanese', 'Italian').\n\n% The effects of a move by a player\neffect(did(P, M), move(P, M), _S).\n\n% After making a move, a player loses control\nabnormal(control(P), move(P, _M), _S).\n\n% Definition of the final outcome\nfinally(outcome(P1, M1, U1, P2, M2, U2), S) :-\n    final(S),\n    holds(role(P1, italian), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, japanese), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players in terms of payoff\nfinally(goal(P1, U1), S) :-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S) :-\n    finally(outcome(_, _, _, P2, _, U2), S).\n",
  "game_moves": [
    "Italian",
    "Japanese"
  ],
  "game_players": [
    "p1",
    "p2"
  ],
  "default_move": "Italian",
  "moves": [
    "Italian",
    "Italian",
    "Japanese",
    "Japanese"
  ],
  "payoffs": [
    4.0,
    0.0,
    2.0,
    0.0
  ],
  "total_payoff": 6.0,
  "trace_messages": [],
  "attempts": 1
}