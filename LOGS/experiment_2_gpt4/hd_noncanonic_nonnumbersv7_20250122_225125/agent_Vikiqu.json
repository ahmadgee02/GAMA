{
  "name": "Vikiqu",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n/* Game specific predicates for Property Division Game */\n\n/* Payoff matrix for Property Division Game */\n% Both compromise:\npayoff('Compromise', 'Compromise', 5, 5).\n% First holds firm, second compromises:\npayoff('HoldFirm', 'Compromise', 7, 3).\n% Second holds firm, first compromises:\npayoff('Compromise', 'HoldFirm', 3, 7).\n% Both hold firm:\npayoff('HoldFirm', 'HoldFirm', 1, 1).\n\n/* Initial state */\ninitial(s0).\n\n/* What holds initially */\ninitially(player(sibling1), s0).\ninitially(player(sibling2), s0).\ninitially(role(sibling1, row), s0).\ninitially(role(sibling2, col), s0).\ninitially(control(sibling1), s0).\ninitially(control(sibling2), s0).\ninitially(default_move(_, 'Compromise'), s0).\n\n/* When a state is final */\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))) :- initial(S).\n\n/* A legal move */\nlegal(move(P, M), S) :- possible(move(P, M), S), holds(control(P), S).\n\n/* What is possible for a player to choose */\npossible(move(P, 'HoldFirm'), S) :- holds(player(P), S).\npossible(move(P, 'Compromise'), S) :- holds(player(P), S).\n\n/* Moves that are opposite to each other */\nopposite_move('Compromise', 'HoldFirm').\nopposite_move('HoldFirm', 'Compromise').\n\n/* The effects of a move */\neffect(did(P, M), move(P, M), _S).\n\n/* The effect of a move: Loss of control post move */\nabnormal(control(P), move(P, _M), _S).\n\n/* What holds finally: the outcome with players, Moves, and Utilities */\nfinally(outcome(P1, M1, U1, P2, M2, U2), S) :-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n/* Goals achieved by the players */\nfinally(goal(P1, U1), S) :-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S) :-\n    finally(outcome(_, _, _, P2, _, U2), S).\n",
  "game_moves": [
    "Compromise",
    "HoldFirm"
  ],
  "game_players": [
    "sibling1",
    "sibling2"
  ],
  "default_move": "Compromise",
  "moves": [
    "Compromise",
    "Compromise",
    "HoldFirm",
    "HoldFirm"
  ],
  "payoffs": [
    5.0,
    3.0,
    1.0,
    7.0
  ],
  "total_payoff": 16.0,
  "trace_messages": [],
  "attempts": 1
}