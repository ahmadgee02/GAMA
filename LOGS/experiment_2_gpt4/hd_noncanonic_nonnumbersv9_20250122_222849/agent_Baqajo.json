{
  "name": "Baqajo",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n\n% Declare discontiguous predicates to allow non-sequential specification\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the military leaders game\n% Numerical payoffs based on strategic scenarios\npayoff('H', 'H', -2, -2).  % Both hold firm: prolonged conflict\npayoff('C', 'H', 0, 3).    % One compromises, the other holds firm: advantage for firm holder\npayoff('H', 'C', 3, 0).    % Similarly, the advantage for the firm holder in the opposite scenario\npayoff('C', 'C', 1, 1).    % Both compromise: ceasefire\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(leader1), s0).\ninitially(player(leader2), s0).\ninitially(role(leader1, north), s0).\ninitially(role(leader2, south), s0).\ninitially(control(leader1), s0).\ninitially(control(leader2), s0).\ninitially(default_move(_, 'C'), s0). % Assume compromise is the default\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'H'), S):- holds(player(P), S).\npossible(move(P, 'C'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('C', 'H').\nopposite_move('H', 'C').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, north), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, south), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_, _, _, P2, _, U2), S).\n\n",
  "game_moves": [
    "H",
    "C"
  ],
  "game_players": [
    "leader1",
    "leader2"
  ],
  "default_move": "C",
  "moves": [
    "C",
    "C",
    "H",
    "H"
  ],
  "payoffs": [
    1.0,
    0.0,
    -2.0,
    3.0
  ],
  "total_payoff": 2.0,
  "trace_messages": [],
  "attempts": 1
}