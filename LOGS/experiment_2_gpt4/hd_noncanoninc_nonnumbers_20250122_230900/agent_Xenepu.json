{
  "name": "Xenepu",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n% Discontiguous declaration for compatibility with SWI Prolog\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n:- discontiguous payoff/4.\n\n% Payoff matrix for the negotiation game\npayoff('hold_firm', 'hold_firm', 0, 0).\npayoff('compromise', 'hold_firm', 1, 3).\npayoff('hold_firm', 'compromise', 3, 1).\npayoff('compromise', 'compromise', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(husband), s0).\ninitially(player(wife), s0).\ninitially(role(husband, negotiator1), s0).\ninitially(role(wife, negotiator2), s0).\ninitially(control(husband), s0).\ninitially(control(wife), s0).\ninitially(default_move(_, 'compromise'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_W, _MW), do(move(_H, _MH), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'hold_firm'), S):- holds(player(P), S).\npossible(move(P, 'compromise'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('compromise', 'hold_firm').\nopposite_move('hold_firm', 'compromise').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, moves, and utilities.\nfinally(outcome(H, MH, UH, W, MW, UW), S):-\n    final(S),\n    holds(role(H, negotiator1), S),\n    holds(did(H, MH), S),\n    holds(role(W, negotiator2), S),\n    holds(did(W, MW), S),\n    payoff(MH, MW, UH, UW).\n\n% Goals achieved by the players.\nfinally(goal(H, UH), S):-\n    finally(outcome(H, _, UH, _, _, _), S).\nfinally(goal(W, UW), S):-\n    finally(outcome(_, _, _, W, _, UW), S).\n",
  "game_moves": [
    "compromise",
    "hold_firm"
  ],
  "game_players": [
    "husband",
    "wife"
  ],
  "default_move": "compromise",
  "moves": [
    "compromise",
    "compromise",
    "hold_firm",
    "hold_firm"
  ],
  "payoffs": [
    2.0,
    1.0,
    0.0,
    3.0
  ],
  "total_payoff": 6.0,
  "trace_messages": [],
  "attempts": 1
}