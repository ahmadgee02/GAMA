{
  "name": "Fifucu",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": " \n:- discontiguous p/3.\n\n/* Game specific predicates for the Basketball Strategy Game */\n\n% Payoff matrix for the Basketball Strategy Game\n% Payoff('Strategy of Lesser-known', 'Strategy of Top University', 'Lesser-known Team Utility', 'Top University Utility')\npayoff('Offense', 'Offense', 3, 1).\npayoff('Defense', 'Defense', 3, 1).\npayoff('Offense', 'Defense', 1, 4).\npayoff('Defense', 'Offense', 1, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(lesser_known), s0).\ninitially(player(top_uni), s0).\ninitially(role(lesser_known, row), s0).\ninitially(role(top_uni, col), s0).\ninitially(control(lesser_known), s0).\ninitially(control(top_uni), s0).\ninitially(default_move(_, 'Offense'), s0).\n\n% When a state is final\nfinal(do(move(_T2, _M2), do(move(_T1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(T, M), S):- possible(move(T, M), S), holds(control(T), S).\n\n% What is possible for a player to choose\npossible(move(T, 'Offense'), S):- holds(player(T), S).\npossible(move(T, 'Defense'), S):- holds(player(T), S).\n\n% Moves that are opposite to each other.\nopposite_move('Offense', 'Defense').\nopposite_move('Defense', 'Offense').\n\n% The effects of a move: if T has chosen M, then in the next state this\n% is what they did.\neffect(did(T, M), move(T, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(T), move(T, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(T1, M1, U1, T2, M2, U2), S):-\n    final(S),\n    holds(role(T1, row), S),\n    holds(did(T1, M1), S),\n    holds(role(T2, col), S),\n    holds(did(T2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(T1, U1), S):-\n    finally(outcome(T1, _, U1, _, _, _), S).\nfinally(goal(T2, U2), S):-\n    finally(outcome(_, _, _, T2, _, U2), S).\n",
  "game_moves": [
    "Offense",
    "Defense"
  ],
  "game_players": [
    "lesser_known",
    "top_uni"
  ],
  "default_move": "Offense",
  "moves": [
    "Offense",
    "Offense",
    "Defense",
    "Defense"
  ],
  "payoffs": [
    3.0,
    1.0,
    3.0,
    1.0
  ],
  "total_payoff": 8.0,
  "trace_messages": [],
  "attempts": 1
}