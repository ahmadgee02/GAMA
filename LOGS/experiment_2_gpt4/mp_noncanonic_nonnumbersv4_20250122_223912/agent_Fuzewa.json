{
  "name": "Fuzewa",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": " \n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous final/1.\n\n% Game specific predicates for the Warlord Conflict Game\n\n% Payoff matrix for Warlord Conflict Game\n% - The weaker warlord gains a strategic advantage when both choose the same strategy.\n% - The stronger warlord consolidates power when their strategies are different.\npayoff('attack', 'attack', 1, 0). % weaker gains, stronger faces challenges\npayoff('defend', 'defend', 1, 0). % weaker gains, stronger faces challenges\npayoff('attack', 'defend', 0, 1). % stronger consolidates power\npayoff('defend', 'attack', 0, 1). % stronger consolidates power\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(warlord1), s0).\ninitially(player(warlord2), s0).\ninitially(role(warlord1, weaker), s0).\ninitially(role(warlord2, stronger), s0).\ninitially(control(warlord1), s0).\ninitially(control(warlord2), s0).\ninitially(default_move(_, 'defend'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'attack'), S):- holds(player(P), S).\npossible(move(P, 'defend'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('attack', 'defend').\nopposite_move('defend', 'attack').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, weaker), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, stronger), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "attack",
    "defend"
  ],
  "game_players": [
    "warlord1",
    "warlord2"
  ],
  "default_move": "defend",
  "moves": [
    "defend",
    "defend",
    "attack",
    "attack"
  ],
  "payoffs": [
    1.0,
    0.0,
    1.0,
    0.0
  ],
  "total_payoff": 2.0,
  "trace_messages": [],
  "attempts": 1
}