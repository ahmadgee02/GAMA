{
  "name": "Canitu",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n:- discontiguous payoff/4.\n\n% Game specific predicates for the Film Release Game\n\n% Payoff matrix for the Film Release Game\n% If both release on holiday, indie benefits, major loses\n% If both release on regular, they get neutral payoff\n% If Indie releases on holiday and major on regular, indie loses, major wins\n% If Indie releases on regular and major on holiday, indie loses, major wins\npayoff('Holiday', 'Holiday', 4, 1).\npayoff('Regular', 'Holiday', 0, 5).\npayoff('Holiday', 'Regular', 0, 5).\npayoff('Regular', 'Regular', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(indie), s0).\ninitially(player(major), s0).\ninitially(role(indie, row), s0).\ninitially(role(major, col), s0).\ninitially(control(indie), s0).\ninitially(control(major), s0).\ninitially(default_move(_, 'Regular'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'Holiday'), S):- holds(player(P), S).\npossible(move(P, 'Regular'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('Holiday', 'Regular').\nopposite_move('Regular', 'Holiday').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_, _, _, P2, _, U2), S).\n\n",
  "game_moves": [
    "Regular",
    "Holiday"
  ],
  "game_players": [
    "indie",
    "major"
  ],
  "default_move": "Regular",
  "moves": [
    "Regular",
    "Regular",
    "Holiday",
    "Holiday"
  ],
  "payoffs": [
    2.0,
    0.0,
    4.0,
    0.0
  ],
  "total_payoff": 6.0,
  "trace_messages": [],
  "attempts": 1
}