{
  "name": "Suzova",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": " \n:- discontiguous initial/1, payoff/4, possible/2, opposite_move/2, effect/3, abnormal/3, finally/2.\n\n% Payoff matrix for the environmentally friendly habits game\npayoff('N', 'N', 2, 2).   % Both stick with current habits\npayoff('E', 'N', 0, 3).   % One adopts new habits, other doesn't\npayoff('N', 'E', 3, 0).   % One doesn't adopt, other does\npayoff('E', 'E', 4, 4).   % Both adopt new habits\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(c1), s0).\ninitially(player(c2), s0).\ninitially(role(c1,row), s0).\ninitially(role(c2,col), s0).\ninitially(control(c1), s0).\ninitially(control(c2), s0).\ninitially(default_move(_, 'N'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(C, M), S):- possible(move(C, M), S), holds(control(C), S).\n\n% What is possible for a player to choose\npossible(move(C,'N'), S):- holds(player(C), S).\npossible(move(C,'E'), S):- holds(player(C), S).\n\n% Moves that are opposite to each other.\nopposite_move('N', 'E').\nopposite_move('E', 'N').\n\n% The effects of a move: if C has chosen M, then in the next state this\n% is what they did.\neffect(did(C, M), move(C, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.,\n% cannot move anymore.\nabnormal(control(C), move(C, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(C1,M1,U1,C2,M2,U2), S):-\n    final(S),\n    holds(role(C1, row), S),\n    holds(did(C1, M1), S),\n    holds(role(C2, col), S),\n    holds(did(C2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(C1, U1), S):-\n    finally(outcome(C1,_,U1,_,_,_), S).\nfinally(goal(C2, U2), S):-\n    finally(outcome(_,_,_,C2,_,U2), S).\n",
  "game_moves": [
    "E",
    "N"
  ],
  "game_players": [
    "c1",
    "c2"
  ],
  "default_move": "N",
  "moves": [
    "N",
    "N",
    "E",
    "E"
  ],
  "payoffs": [
    2.0,
    3.0,
    4.0,
    0.0
  ],
  "total_payoff": 9.0,
  "trace_messages": [],
  "attempts": 1
}