{
  "name": "Hinaxi",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n/* Game specific predicates for the Disarmament Treaty Game */\n\n% Payoff matrix for the Disarmament Treaty Game\npayoff('Comply', 'Comply', 5, 5).\npayoff('Comply', 'Defect', 0, 10).\npayoff('Defect', 'Comply', 10, 0).\npayoff('Defect', 'Defect', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, whether they can play, and the default move.\ninitially(player(country1), s0).\ninitially(player(country2), s0).\ninitially(role(country1, row), s0).\ninitially(role(country2, col), s0).\ninitially(control(country1), s0).\ninitially(control(country2), s0).\ninitially(default_move(_, 'Comply'), s0).\n\n% When a state is final\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(C, M), S) :- possible(move(C, M), S), holds(control(C), S).\n\n% What is possible for a player to choose\npossible(move(C, 'Comply'), S) :- holds(player(C), S).\npossible(move(C, 'Defect'), S) :- holds(player(C), S).\n\n% Moves that are opposite to each other.\nopposite_move('Comply', 'Defect').\nopposite_move('Defect', 'Comply').\n\n% The effects of a move: if C has chosen M, then in the next state this is what they did.\neffect(did(C, M), move(C, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e. cannot move anymore.\nabnormal(control(C), move(C, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(C1, M1, U1, C2, M2, U2), S) :-\n    final(S),\n    holds(role(C1, row), S),\n    holds(did(C1, M1), S),\n    holds(role(C2, col), S),\n    holds(did(C2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(C1, U1), S) :-\n    finally(outcome(C1, _, U1, _, _, _), S).\nfinally(goal(C2, U2), S) :-\n    finally(outcome(_, _, _, C2, _, U2), S).\n",
  "game_moves": [
    "Defect",
    "Comply"
  ],
  "game_players": [
    "country1",
    "country2"
  ],
  "default_move": "Comply",
  "moves": [
    "Comply",
    "Comply",
    "Defect",
    "Defect"
  ],
  "payoffs": [
    5.0,
    0.0,
    2.0,
    10.0
  ],
  "total_payoff": 17.0,
  "trace_messages": [],
  "attempts": 1
}