{
  "name": "Homipu",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n% Domain-specific predicates for the environmental organizations game\n\n:- discontiguous payoff/4.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the environmental organizations game\npayoff('Collaborate', 'Collaborate', 5, 5).\npayoff('Collaborate', 'Independent', 0, 3).\npayoff('Independent', 'Collaborate', 3, 0).\npayoff('Independent', 'Independent', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(org1), s0).\ninitially(player(org2), s0).\ninitially(role(org1, org), s0).\ninitially(role(org2, org), s0).\ninitially(control(org1), s0).\ninitially(control(org2), s0).\ninitially(default_move(_, 'Independent'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_Org2, _M2), do(move(_Org1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(Org, M), S):- possible(move(Org, M), S), holds(control(Org), S).\n\n% What is possible for an organization to choose\npossible(move(Org,'Collaborate'), S):- holds(player(Org), S).\npossible(move(Org,'Independent'), S):- holds(player(Org), S).\n\n% Moves that are opposite to each other.\nopposite_move('Collaborate', 'Independent').\nopposite_move('Independent', 'Collaborate').\n\n% The effects of a move: if Org has chosen M, then in the next state this\n% is what they did.\neffect(did(Org, M), move(Org, M), _S).\n\n% The effects of a move: once a move is made, the organization loses control, i.e.\n% cannot move anymore.\nabnormal(control(Org), move(Org, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(Org1,M1,U1,Org2,M2,U2), S):-\n    final(S),\n    holds(role(Org1, org), S),\n    holds(did(Org1, M1), S),\n    holds(role(Org2, org), S),\n    holds(did(Org2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the organizations.\nfinally(goal(Org1, U1), S):-\n    finally(outcome(Org1,_,U1,_,_,_), S).\nfinally(goal(Org2, U2), S):-\n    finally(outcome(_,_,_,Org2,_,U2), S).\n",
  "game_moves": [
    "Collaborate",
    "Independent"
  ],
  "game_players": [
    "org1",
    "org2"
  ],
  "default_move": "Independent",
  "moves": [
    "Independent",
    "Independent",
    "Collaborate",
    "Collaborate"
  ],
  "payoffs": [
    2.0,
    2.0,
    5.0,
    5.0
  ],
  "total_payoff": 14.0,
  "trace_messages": [],
  "attempts": 1
}