{
  "name": "Sidaza",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n/* Game specific predicates for Generals' Dilemma */\n\n/* Payoff matrix for Generals' Dilemma */\n\npayoff('JointAttack', 'JointAttack', 5, 5).\npayoff('JointAttack', 'Independent', 0, 3).\npayoff('Independent', 'JointAttack', 3, 0).\npayoff('Independent', 'Independent', 2, 2).\n\n/* Initial state */\ninitial(s0).\n\n/* What holds initially: players, roles, control, default moves */\ninitially(player(general1), s0).\ninitially(player(general2), s0).\ninitially(role(general1, lead), s0).\ninitially(role(general2, support), s0).\ninitially(control(general1), s0).\ninitially(control(general2), s0).\ninitially(default_move(_, 'Independent'), s0).\n\n/* Final state definition */\nfinal(do(move(_G2, _Move2), do(move(_G1, _Move1), S))):- initial(S).\n\n/* Legal moves: a possible move where the player has control (is their turn) */\nlegal(move(G, M), S):- possible(move(G, M), S), holds(control(G), S).\n\n/* Possible moves for a player */\npossible(move(G, 'JointAttack'), S):- holds(player(G), S).\npossible(move(G, 'Independent'), S):- holds(player(G), S).\n\n/* Moves that are opposite to each other */\nopposite_move('JointAttack', 'Independent').\nopposite_move('Independent', 'JointAttack').\n\n/* The effects of a move: if G has chosen M, then in the next state this is what they did */\neffect(did(G, M), move(G, M), _S).\n\n/* The effects of a move: once a move is made, the player loses control */\nabnormal(control(G), move(G, _M), _S).\n\n/* What holds finally: the outcome with players, Moves, and Utilities */\nfinally(outcome(G1, M1, U1, G2, M2, U2), S):-\n    final(S),\n    holds(role(G1, lead), S),\n    holds(did(G1, M1), S),\n    holds(role(G2, support), S),\n    holds(did(G2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n/* Goals achieved by the players */\nfinally(goal(G1, U1), S):-\n    finally(outcome(G1, _, U1, _, _, _), S).\nfinally(goal(G2, U2), S):-\n    finally(outcome(_, _, _, G2, _, U2), S).\n",
  "game_moves": [
    "JointAttack",
    "Independent"
  ],
  "game_players": [
    "general1",
    "general2"
  ],
  "default_move": "Independent",
  "moves": [
    "Independent",
    "Independent",
    "JointAttack",
    "JointAttack"
  ],
  "payoffs": [
    2.0,
    3.0,
    5.0,
    0.0
  ],
  "total_payoff": 10.0,
  "trace_messages": [],
  "attempts": 1
}