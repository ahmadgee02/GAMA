{
  "name": "Lijula",
  "strategy_name": "tit-for-tat.",
  "strategy_rules": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "status": "correct",
  "game_rules": "\n:- discontiguous initially/2.\n:- discontiguous payoff/4.\n:- discontiguous possible/2.\n\n% Payoff matrix for the pharmaceutical companies game\npayoff('Partner', 'Partner', 10, 10).\npayoff('Partner', 'Independent', -5, 5).\npayoff('Independent', 'Partner', 5, -5).\npayoff('Independent', 'Independent', 2, 2).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(c1), s0).\ninitially(player(c2), s0).\ninitially(role(c1, company1), s0).\ninitially(role(c2, company2), s0).\ninitially(control(c1), s0).\ninitially(control(c2), s0).\ninitially(default_move(_, 'Independent'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))):- initial(S).\n\n% A legal move is a possible move where the company has control (is its turn).\nlegal(move(C, M), S):- possible(move(C, M), S), holds(control(C), S).\n\n% What is possible for a company to choose\npossible(move(C, 'Partner'), S):- holds(player(C), S).\npossible(move(C, 'Independent'), S):- holds(player(C), S).\n\n% Moves that are opposite to each other.\nopposite_move('Partner', 'Independent').\nopposite_move('Independent', 'Partner').\n\n% The effects of a move: if C has chosen M, then in the next state this\n% is what they did.\neffect(did(C, M), move(C, M), _S).\n\n% The effects of a move: once a move is made, the company loses control, i.e.\n% cannot move anymore.\nabnormal(control(C), move(C, _M), _S).\n\n% What holds finally: the outcome with companies, Moves, and Utilities.\nfinally(outcome(C1, M1, U1, C2, M2, U2), S):-\n    final(S),\n    holds(role(C1, company1), S),\n    holds(did(C1, M1), S),\n    holds(role(C2, company2), S),\n    holds(did(C2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the companies.\nfinally(goal(C1, U1), S):-\n    finally(outcome(C1, _, U1, _, _, _), S).\nfinally(goal(C2, U2), S):-\n    finally(outcome(_, _, _, C2, _, U2), S).\n",
  "game_moves": [
    "Partner",
    "Independent"
  ],
  "game_players": [
    "c1",
    "c2"
  ],
  "default_move": "Independent",
  "moves": [
    "Independent",
    "Independent",
    "Partner",
    "Partner"
  ],
  "payoffs": [
    2.0,
    5.0,
    10.0,
    -5.0
  ],
  "total_payoff": 12.0,
  "trace_messages": [],
  "attempts": 1
}